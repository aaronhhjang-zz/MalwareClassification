var glob = require("glob"),
  path = require("path");
const { report } = require("process");

const nameOfOut = "simplified";
const outputFormat = ".json";

// EDIT THIS PATH BEFORE USING
const genericPathToReportJson = "../report/**/report.json"; // Relative path locally
// const genericPathToReportJson = "analyses/**/reports/*.json"; // relative path in vm

let fileCount = 0;

glob.sync(genericPathToReportJson).forEach(function (file) {
  const fs = require("fs");
  let data = JSON.parse(fs.readFileSync(path.resolve(file), "utf8"));

  // Remove non numerical values
  let fileNum = file.replace(/\D/g, "");

  // EDIT THIS PATH BEFORE USING
  //let taskpath = "./analyses/" + fileNum + "/task.json"; // in vm
  let taskpath = "../report/" + fileNum + "/reports" + "/task.json"; // local

  try {
    let task = JSON.parse(fs.readFileSync(taskpath, "utf8"));

    let fullTarget = task.target;
    let slashIndex = fullTarget.lastIndexOf("/");
    let target = fullTarget.slice(slashIndex + 1);
    let signatures = [];
    for (i = 0; i < data.signatures.length; i++) {
      signatures.push({
        description: data.signatures[i].description,
        severity: data.signatures[i].severity,
      });
    }

    let report = {
      name: target,
      score: data.info.score,
      signatures: signatures,
    };

    var json = JSON.stringify(report);

    // Overwrites pre-existing "simplifiedx.json"
    let outputFile = nameOfOut + fileNum + target + outputFormat;
    fs.writeFileSync(outputFile, json);
    console.log("Finished parsing " + fileCount++ + " " + outputFile);
  } catch (e) {
    console.log("Error parsing " + fileCount++ + e);
  }
});
