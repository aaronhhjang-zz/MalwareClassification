var glob = require("glob"),
  path = require("path");
const fs = require("fs");

const nameOfOut = "signature-descriptions";
const outputFormat = ".csv";

// absolute paths, EDIT BEFORE USING: for vm, remove ..
const pathsToSignatures = [
  "../opt/cuckoo/signatures/windows/*.py",
  "../opt/cuckoo/signatures/network/*.py",
];

let fileCount = 0;
let signatures = [];

for (i = 0; i < 2; i++) {
  glob.sync(pathsToSignatures[i]).forEach(function (file) {
    try {
      const data = fs.readFileSync(path.resolve(file), "utf8");

      let beginKeyWord = "description";
      let endKeyWord = "severity";

      let descriptionStartIndex = data.indexOf(beginKeyWord);
      let descriptionEndIndex = data.indexOf(endKeyWord);
      let signatureDescription = data.slice(
        descriptionStartIndex + beginKeyWord.length,
        descriptionEndIndex
      );
      let newSignatureDescription = signatureDescription.replace("=", "");
      newSignatureDescription = newSignatureDescription.trim();
      // format of description is good
      if (newSignatureDescription.charAt(0) != '"') {
        throw "BAD FORMAT";
      }
      newSignatureDescription = newSignatureDescription.replace('"', "");
      newSignatureDescription = newSignatureDescription.replace('"', "");
      newSignatureDescription = newSignatureDescription.trim();

      signatures.push(newSignatureDescription);
      fileCount++;

      //console.log(fileCount + ". Successfully retrieved description from " + file);
    } catch (e) {
      console.log("Error at file: " + file + ": " + e);
    }
  });
}

try {
  let csv = signatures.join(",");

  let outputFile = nameOfOut + outputFormat;
  fs.writeFileSync(outputFile, csv);
  console.log(
    "\nFinished writing " + fileCount + " signatures into " + outputFile
  );
} catch (e) {
  console.log("Error writing to csv " + e);
}
